@{
    ViewData["Title"] = ViewBag.Chat?.Name;
}

<link rel="stylesheet" href="~/css/create_chat.css" asp-append-version="true" />

<div class="main-container">
    <div class="default-elem create_chat_container">
        <partial name="~/Views/partials/chat_settings.cshtml" />
        <partial name="~/Views/partials/chat_users_block.cshtml" />
        <span class="ok-button material-symbols-sharp">
            check
        </span>
    </div>
</div>

<script>
    let chatName = document.querySelector(".inputs-container .chat-name");
    let chatDescription = document.querySelector(".inputs-container .chat-description");
    let inputImage = document.querySelector(".load-photo-container .input-file");
    let imagePreview = document.querySelector(".load-photo-container .image-preview");
    let okBtn = document.querySelector(".ok-button");
    let chatLink = document.querySelector(".inputs-container .chat-link")

    loadChat();
    checkValid(chatName.value);

    console.log(inputImage.files[0] == null);

    okBtn.addEventListener("click", () => {
        editChat();
    });

    async function editChat() {
        let contacts = document.querySelectorAll(".contact-selected");
        let idList = Array.from(contacts).map(contact => {
            return contact.querySelector(".contact-id").value;
        });

        var image = inputImage.files[0];
        var path = imagePreview.src;
        if (image != null)
            path = await uploadImage(image);

        var createModel = {
            Id: @ViewBag.Chat?.Id,
            Name: chatName.value,
            Description: chatDescription.value,
            Image: path,
            UsersId: idList,
        }

        fetch('/Chat/Edit', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(createModel),
            redirect: "follow",
        }).then(response => {
            if (response.redirected)
                window.location.href = response.url;
        });
    }

    function loadChat() {
        chatName.value = "@ViewBag.Chat.Name";
        chatDescription.value = "@ViewBag.Chat.Description";
        inputImage.files[0] = "@ViewBag.Chat.Image";
        imagePreview.src = "@ViewBag.Chat.Image";
        if ("@ViewBag.Chat.Image" != "")
            imagePreview.style.opacity = 1;

        var link = "localhost:5205/Chat/Invite?chatId=@ViewBag.Chat.Id"
        chatLink.textContent += link;

        chatLink.addEventListener("click", function () {
            var textarea = document.createElement("textarea");
            textarea.value = link;

            document.body.appendChild(textarea);
            textarea.select();
            document.execCommand("copy");
            document.body.removeChild(textarea);

            alert("Ссылка скопирована");
        });
    }

    async function uploadImage(image) {
        try {
            var formData = new FormData();
            formData.append('file', image);

            const response = await fetch('/Chat/UploadChatImage/', {
                method: 'POST',
                body: formData
            });

            if (!response.ok) {
                throw new Error('Ошибка загрузки изображения');
            }

            const data = await response.json();
            console.log('Ссылка на изображение:', data.imageUrl);
            return data.imageUrl;
        }
        catch (error) {
            console.error('Произошла ошибка:', error);
            return "";
        }
    }

    chatName.addEventListener("input", event => {
        checkValid(event.target.value);
    });

    function checkValid(text) {
        if (text.length > 0) {
            if (!okBtn.classList.contains('ok-btn-enabled'))
                okBtn.classList.add("ok-btn-enabled");
        }
        else {
            if (okBtn.classList.contains('ok-btn-enabled'))
                okBtn.classList.remove("ok-btn-enabled");
        }
    }
</script>